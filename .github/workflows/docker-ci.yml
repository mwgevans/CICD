name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '34 1 * * *'
  push:
    branches: [ "main","Develop" ]
    # Publish semver tags as releases.
    # tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Build Module
        id: pwsh
        shell: pwsh
        run: |
          if ($env:GITHUB_EVENT_NAME -eq 'pull_request'){ $PreRelease = 'rc'} else { $PreRelease = 'beta'}
          echo "PreRelease=$PreRelease" >> $env:GITHUB_OUTPUT
      - name: Minor version for each merge
        id: taggerDryRun
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DRY_RUN: true
          PRERELEASE_SUFFIX: ${{ steps.pwsh.outputs.PreRelease }}

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      # if: github.event_name != 'pull_request'
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
            images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            tags: |
                type=ref,event=branch
                type=ref,event=pr
                type=semver,pattern={{version}},value=${{ steps.taggerDryRun.outputs.new_tag }}
                type=semver,pattern={{major}}.{{minor}},value=${{ steps.taggerDryRun.outputs.new_tag }}
      - name: Minor version for each merge
        id: taggerFinal
        if: github.event.pull_request.merged == true
        uses: anothrNick/github-tag-action@1.36.0
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            WITH_V: true
      - name: Create Release
        if: github.event.pull_request.merged == true
        uses: ncipollo/release-action@v1
        with:
            tag: ${{ steps.taggerFinal.outputs.tag }}
            prerelease: false
            #artifacts: "release.tar.gz,foo/*.txt"
            #bodyFile: "body.md"
      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          #push: ${{ github.event_name != 'pull_request' }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      